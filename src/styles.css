@import "tailwindcss";

@theme inline {
  /* Mako Design System Colors - Essential for library components */
  
  /* Blue Scale */
  --color-blue-10: #FBFDFE;
  --color-blue-25: #F6FAFD;
  --color-blue-50: #EEF6FC;
  --color-blue-100: #D8ECF8;
  --color-blue-200: #BADEF3;
  --color-blue-300: #8ACAEA;
  --color-blue-400: #56AEE1;
  --color-blue-500: #2F8DDA;
  --color-blue-600: #2671D9;
  --color-blue-700: #265FD9;
  --color-blue-800: #204DB6;
  --color-blue-900: #19448F;
  --color-blue-950: #051E50;
  
  /* Yellow Scale */
  --color-yellow-10: #FFFEF5;
  --color-yellow-25: #FFFEF0;
  --color-yellow-50: #FFFEEA;
  --color-yellow-100: #FFF9C5;
  --color-yellow-200: #FFF285;
  --color-yellow-300: #FFE546;
  --color-yellow-400: #FFD700;
  --color-yellow-500: #FFB400;
  --color-yellow-600: #E28A00;
  --color-yellow-700: #BB6002;
  --color-yellow-800: #984A08;
  --color-yellow-900: #7C3D0B;
  --color-yellow-950: #481F00;
  
  /* Green Scale */
  --color-green-10: #FAFFFC;
  --color-green-25: #F5FEFA;
  --color-green-50: #EFFEF6;
  --color-green-100: #DBFBEC;
  --color-green-200: #BAF7DA;
  --color-green-300: #84F1BD;
  --color-green-400: #3EEA99;
  --color-green-500: #17D079;
  --color-green-600: #00C66A;
  --color-green-700: #009550;
  --color-green-800: #007B43;
  --color-green-900: #00673A;
  --color-green-950: #00341E;
  
  /* Red Scale */
  --color-red-10: #FEFBFB;
  --color-red-25: #FEF7F6;
  --color-red-50: #FDF4F3;
  --color-red-100: #FCE6E4;
  --color-red-200: #FBD1CD;
  --color-red-300: #F7B0AA;
  --color-red-400: #F08379;
  --color-red-500: #E55A4E;
  --color-red-600: #D23D30;
  --color-red-700: #BA3327;
  --color-red-800: #922B22;
  --color-red-900: #792A23;
  --color-red-950: #42110D;
  
  /* Purple Scale */
  --color-purple-10: #FAFBFF;
  --color-purple-25: #F5F6FF;
  --color-purple-50: #EEF0FF;
  --color-purple-100: #E0E3FF;
  --color-purple-200: #C7CAFE;
  --color-purple-300: #A5A8FC;
  --color-purple-400: #8781F8;
  --color-purple-500: #7463F1;
  --color-purple-600: #6748E5;
  --color-purple-700: #5838CA;
  --color-purple-800: #4730A3;
  --color-purple-900: #3D2E81;
  --color-purple-950: #251B4B;
  
  /* Gray/Neutral Scale */
  --color-gray-10: #FCFDFD;
  --color-gray-25: #F8FAFB;
  --color-gray-50: #F1F3F5;
  --color-gray-100: #EBF1F4;
  --color-gray-200: #DBE4EA;
  --color-gray-300: #C4D2DD;
  --color-gray-400: #ACBCCD;
  --color-gray-500: #96A7BE;
  --color-gray-600: #7F8EAC;
  --color-gray-700: #78849E;
  --color-gray-800: #59647A;
  --color-gray-900: #4C5463;
  --color-gray-950: #2C303A;
  
  /* Black & White */
  --color-black: #1A1A1A;
  --color-white: #FFFFFF;
}

:root {
  --radius: 0.25rem;
  
  /* Border radius scale */
  --radius-sm: calc(var(--radius) - 2px);
  --radius-md: calc(var(--radius) - 1px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 2px);
  
  /* Component color mappings */
  --background: var(--color-white);
  --foreground: var(--color-gray-950);
  --card: var(--color-white);
  --card-foreground: var(--color-gray-950);
  --popover: var(--color-white);
  --popover-foreground: var(--color-gray-950);
  --primary: var(--color-blue-600);
  --primary-foreground: var(--color-white);
  --secondary: var(--color-gray-100);
  --secondary-foreground: var(--color-gray-900);
  --muted: var(--color-gray-100);
  --muted-foreground: var(--color-gray-800);
  --accent: var(--color-gray-100);
  --accent-foreground: var(--color-gray-900);
  --destructive: var(--color-red-600);
  --border: var(--color-gray-200);
  --input: var(--color-gray-400);
  --ring: var(--color-blue-600);
}

.dark {
  --background: var(--color-gray-950);
  --foreground: var(--color-white);
  --card: var(--color-gray-900);
  --card-foreground: var(--color-white);
  --popover: var(--color-gray-900);
  --popover-foreground: var(--color-white);
  --primary: var(--color-blue-500);
  --primary-foreground: var(--color-gray-950);
  --secondary: var(--color-gray-800);
  --secondary-foreground: var(--color-gray-100);
  --muted: var(--color-gray-800);
  --muted-foreground: var(--color-gray-400);
  --accent: var(--color-gray-800);
  --accent-foreground: var(--color-gray-100);
  --destructive: var(--color-red-500);
  --border: var(--color-gray-800);
  --input: var(--color-gray-700);
  --ring: var(--color-blue-500);
}

/* Essential styles for Select component */

/* Backgrounds */
.bg-popover {
  background-color: var(--popover);
}

.bg-accent {
  background-color: var(--accent);
}

.bg-transparent {
  background-color: transparent;
}

.bg-border {
  background-color: var(--border);
}

/* Text colors */
.text-popover-foreground {
  color: var(--popover-foreground);
}

.text-accent-foreground {
  color: var(--accent-foreground);
}

.text-muted-foreground {
  color: var(--muted-foreground);
}

/* Shadows */
.shadow-xs {
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
}

.shadow-md {
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

/* Focus states */
.focus:bg-accent:focus {
  background-color: var(--accent);
}

.focus:text-accent-foreground:focus {
  color: var(--accent-foreground);
}

.focus-visible\:border-ring:focus-visible {
  border-color: var(--ring);
}

.focus-visible\:ring-ring\/50:focus-visible {
  --tw-ring-color: color-mix(in srgb, var(--ring) 50%, transparent);
}

.focus-visible\:ring-\[3px\]:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

/* Border styles */
.border {
  border-width: 1px;
}

.border-input {
  border-color: var(--input);
}

.border-destructive {
  border-color: var(--destructive);
}

/* Rounded corners */
.rounded-lg {
  border-radius: calc(var(--radius) + 2px);
}

.rounded-md {
  border-radius: calc(var(--radius) - 1px);
}

.rounded-sm {
  border-radius: calc(var(--radius) - 2px);
}

/* Animations */
@keyframes in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes zoom-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes zoom-out {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

@keyframes slide-in-from-top {
  from {
    transform: translateY(-2px);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-in-from-bottom {
  from {
    transform: translateY(2px);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-in-from-left {
  from {
    transform: translateX(-2px);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slide-in-from-right {
  from {
    transform: translateX(2px);
  }
  to {
    transform: translateX(0);
  }
}

.animate-in {
  animation: in 150ms ease-out;
}

.animate-out {
  animation: out 150ms ease-in;
}

.fade-in-0 {
  animation: fade-in 150ms ease-out;
}

.fade-out-0 {
  animation: fade-out 150ms ease-in;
}

.zoom-in-95 {
  animation: zoom-in 150ms ease-out;
}

.zoom-out-95 {
  animation: zoom-out 150ms ease-in;
}

.slide-in-from-top-2 {
  animation: slide-in-from-top 150ms ease-out;
}

.slide-in-from-bottom-2 {
  animation: slide-in-from-bottom 150ms ease-out;
}

.slide-in-from-left-2 {
  animation: slide-in-from-left 150ms ease-out;
}

.slide-in-from-right-2 {
  animation: slide-in-from-right 150ms ease-out;
}

.data-\[state\=open\]\:animate-in[data-state="open"] {
  animation: in 150ms ease-out;
}

.data-\[state\=closed\]\:animate-out[data-state="closed"] {
  animation: out 150ms ease-in;
}

.data-\[state\=open\]\:fade-in-0[data-state="open"] {
  animation: fade-in 150ms ease-out;
}

.data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
  animation: fade-out 150ms ease-in;
}

.data-\[state\=open\]\:zoom-in-95[data-state="open"] {
  animation: zoom-in 150ms ease-out;
}

.data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
  animation: zoom-out 150ms ease-in;
}

.data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
  animation: slide-in-from-top 150ms ease-out;
}

.data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
  animation: slide-in-from-bottom 150ms ease-out;
}

.data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
  animation: slide-in-from-right 150ms ease-out;
}

.data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
  animation: slide-in-from-left 150ms ease-out;
}

/* Data attribute styles */
.data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
  color: var(--muted-foreground);
}

.data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}

.data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: 0.5;
}

/* Select-specific positioning */
.data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=top\]\:-translate-y-1[data-side="top"] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=left\]\:-translate-x-1[data-side="left"] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=right\]\:translate-x-1[data-side="right"] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

/* ARIA states for destructive styling */
.aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
  --tw-ring-color: color-mix(in srgb, var(--destructive) 20%, transparent);
}

.aria-invalid\:border-destructive[aria-invalid="true"] {
  border-color: var(--destructive);
}

.dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
  --tw-ring-color: color-mix(in srgb, var(--destructive) 40%, transparent);
}

.dark\:bg-input\/30:is(.dark *) {
  background-color: color-mix(in srgb, var(--input) 30%, transparent);
}

.dark\:hover\:bg-input\/50:hover:is(.dark *) {
  background-color: color-mix(in srgb, var(--input) 50%, transparent);
} 